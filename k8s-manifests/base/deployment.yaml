apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-env-cache
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dev-env-cache
  template:
    metadata:
      labels:
        app: dev-env-cache
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      initContainers:
      - name: nix-pre-populate
        image: nixos/nix:2.3.12
        imagePullPolicy: IfNotPresent
        command:
        - nix-shell
        - -p
        - rsync
        - --run
        args:
        - "rsync --info=progress2 -auvz /nix/ /to-populate-nix"
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - name: nix-dir
          mountPath: /to-populate-nix
      containers:
      - name: sshd
        image: nixos/nix:2.3.12
        imagePullPolicy: IfNotPresent
        command:
        - nix-shell
        - -p
        - openssh
        - --run
        args:
        - "bash /sshd_config_mnt/startup.sh"
        env:
        - name: PASSWORD
          valueFrom:
            secretKeyRef: {} # patch me
        ports:
        - name: ssh
          containerPort: 22
        volumeMounts:
        - name: nix-dir
          mountPath: /nix
        - name: sshd-config
          mountPath: /sshd_config_mnt
        - name: ssh-key
          mountPath: /ssh_key_mnt
        - name: ssh-host-key
          mountPath: /ssh_host_key_mnt
      volumes:
      - name: nix-dir
        emptyDir: {}
      - name: ssh-key
        secret: {} # patch me
      - name: ssh-host-key
        secret: {} # patch me
      - name: sshd-config
        configMap:
          name: dev-env-cache-sshd-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coder
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: coder
  template:
    metadata:
      labels:
        app: coder
    spec:
      serviceAccountName: coder-service-account
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: coder
        image: nexus.lan:5000/dev-env # patch me, ideally
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "2"
            memory: 5Gi
          limits:
            cpu: "10"
            memory: 20Gi
        env:
        - name: PASSWORD
          valueFrom:
            secretKeyRef: {} # patch me
        volumeMounts:
        - name: dev-data
          mountPath: /root/project
        - name: ssh-key
          mountPath: /tmp/secrets/ssh
        - name: cache-ssh-host-key
          mountPath: /tmp/secrets/cache_ssh_host_key
        - name: cache-signing-key
          mountPath: /tmp/secrets/cache_signing_key
        ports:
        - name: http-port
          containerPort: 8080
        - name: dev-port
          containerPort: 8888
      - name: file-browser
        image: nginx:mainline-alpine
        args:
        - ash
        - -c
        - cp /tmp/nginx-config/nginx.conf /etc/nginx/nginx.conf && nginx -g 'daemon off;'
        volumeMounts:
        - name: dev-data
          mountPath: /www/data
        - name: nginx-config
          mountPath: /tmp/nginx-config
        ports:
        - name: file-browser
          containerPort: 80
      volumes:
      - name: dev-data
        persistentVolumeClaim: {} # patch me
      - name: ssh-key
        secret: {} # patch me
      - name: cache-ssh-host-key
        secret: {} # patch me, should match similar for the cache deployment
      - name: cache-signing-key
        secret: {} # patch me, should match similar for the cache deployment
      - name: nginx-config
        configMap:
          name: file-browser-nginx-config
